// CControls example
#include "pc_most.oc"
/$ Ccontrols.c

int clrObjFrame, clrObjFill, clrObjFG, clrObjSelFill, clrObjSelFG;
int clrFormFrame, clrFormFill;
int clrMenuFrame, clrMenuFill, clrMenuFG, clrMenuSelFill, clrMenuSelFG;
int curFrame, curFill, curFG, curSelFill, curSelFG;
int useColor;

#define Chandle pointer

Cip(int s,int x,int y,int w,int h) {
    pointer p;
    p=malloct("i", s);
    if (!p)
        return 0;
    memcpy(&p[1], &x, 4);
    return p;
}

/$ Ccontrols1.c
Cc(pointer p) {
    int x,y,h;
    x=penx(); y=peny();
    
    if ((p[0]==10)||(p[0]==14))
        h=11;
    else
        h=p[4];
    return ((x>p[1]) && (x<(p[1]+p[3])) && (y>p[2]) && (y<(p[2]+h)));
}

Ct(int x,int y,int w,int h,int a,string s) {
    int t;
    textalign(a);
    rect(0,x,y,x+w,y+h,0);
    if (a==2)
        t=x+w;
    else if (a==1)
        t=x+(w/2);
    else t=x+1;
    text(t,y,s);
    textalign(0);
}

Cet(pointer p) {
    textattr(0,1,0);
    Ct(p[1],p[2],p[3],p[4],p[8],*p[5]);
}

Cib(pointer p) {
    rect(3,p[1],p[2],p[1]+p[3],p[2]+p[4],p[7]);
}

Chb(pointer p) {
    int h;
    h=1;
    Cib(p);
    do {
        if (!Cc(p)&&h) {
            h=0;
            Cib(p);
        } else if (Cc(p)&&!h) {
            h=1;
            Cib(p);
        }
    } while (pcevent(1)!=3);
    
    if (h==1) {
        if (p[0]==3) {
            p[8]=!(p[8]);
            h=1;
        }
        else
            Cib(p);
    }
    return h;
}

Cir(pointer p) {
    int x,w;
    w=p[3]/p[8];
    x=p[1]+(p[6]*w);
    rect(3,x,p[2],x+w-1,p[2]+p[4],0);
}

Cdr(pointer p);
Chr(pointer p) {
    int ic;
    do {
        ic=(penx()-p[1])/(p[3]/p[8]);
        if ((ic!=p[6])&&(ic<p[8])&&Cc(p)) {
            if (!useColor && p[6]!=-1)
                Cir(p);
            p[6]=ic;
            if (useColor) Cdr(p);
            else Cir(p);
        }
    } while (pcevent(1)!=3);

    return (p[6]!=-1);
}

Che(pointer p) {
    int r;
    string s,m;
    r=Chb(p);
    if (strlen(*p[10])>0)
        m=*p[10];
    else
        m=*p[5];
    if (r) {
        s=getsi(p[1]-1, p[2]-1, p[3], *p[5]);
        if (s)*p[5]=s;
            Cet(p);
    }
    return r;
}

Cck(pointer p) {
    if (p[6])
        bitmap(p[1],p[2]+1,"0c0067ee41c5b85f04e84484087f8");
    else
        bitmap(p[1],p[2]+1,"0c0007f84084084084084084087f8");
}

Chc(pointer p) {
    if (Cc(p)) {
        p[6]=!(p[6]);
        Cck(p);
        return 1;
    }
    else
        return 0;
}

Cilbi(pointer p) {
    int y,n;
    n=p[4]/11;
    if ((p[6]>=p[5]) && (p[6]<(p[5]+n))) {
        y=p[2]+((p[6]-p[5])*11);
        rect(3,p[1],y,p[1]+p[3],y+11,0);
    }
}

Cdlbi(pointer p) {
    int i,l,x,y,n,r;
    n=p[4]/11;
    if (p[0]==13)
        p[8]=dbnrecs();
    pushdraw();
    setbgi(curFill);
    setfgi(curFrame);
    settextcolori(curFG);
    for (i=p[5];(i<p[5]+n)&&(i<p[8]);i++) {
        y=p[2]+((i-p[5])*11);
        if (p[6]==i) {
            pushdraw();
            setbgi(curSelFill);
            settextcolori(curSelFG);
        }
        if ((p[0]==9)||(p[0]==13)) {
            x=p[1];
            for (r=0;r<p[12];r++) {
                if (p[0]==9)
                    Ct(x,y,*(p[10]+r)-1,11,*(p[11]+r),*(p[7]+(p[12]*i)+r));
                else {
                    dbrec(i);
                    dbreadx(p[7],*p[13]);
                    Ct(x,y,*(p[10]+r)-1,11,*(p[11]+r),(string)*(p[7]+r));
                }
                x=x+*(p[10]+r);
            }
            x--;
            rect(0,x,y,p[3]+p[1],y+11,0);
        } else
            Ct(p[1],y,p[3],11,0,*(p[7]+i));
        if (p[6]==i)
            popdraw();
    }
    for (l=(i-p[5]);l<n;l++) {
        y=p[2]+(l*11);
        if (p[0]==9) {
            x=p[1];
            for (r=0;r<p[12];r++) {
                rect(0,x,y,x+*(p[10]+r)-1,y+11,0);
                x=x+*(p[10]+r);
            }
        } else
            rect(0,p[1],y,p[1]+p[3],y+11,0);
    }
    setfgi(curFG);
    if (p[6]==p[5]) {
        pushdraw();
        setbgi(curSelFill);
        setfgi(curSelFG);
    }
    if (p[5]>0)
        bitmap(p[1]+p[3]-8,p[2]+1,"0710387cfe383838");
    else
        rect(0,p[1]+p[3]-8,p[2]+1,p[1]+p[3]-1,p[2]+10,0);
    if (p[6]==p[5])
        popdraw();
    if (p[6]==p[5]+n-1) {
        setbgi(curSelFill);
        setfgi(curSelFG);
    }
    if ((p[5]+n)<p[8])
        bitmap(p[1]+p[3]-8,p[2]+p[4]-8,"07383838fe7c3810");
    else
        rect(0,p[1]+p[3]-8,p[2]+p[4]-8,p[1]+p[3]-1,p[2]+p[4],0);
    popdraw();
    if (!useColor) Cilbi(p);
}

Csi(pointer p, pointer s, int d) {
    int n;
    n=(p[4]/11)*d;
    if (((d>0)&&((p[5]+n)<p[8])) || ((d<0)&&(p[5]>0))) {
        if (Chb(s)) {
            if (!useColor) Cilbi(p);
            p[5]=p[5]+n;
            if (p[5]>(p[8]-n))
                p[5]=p[8]-n;
            if (p[5]<0)
                p[5]=0;
            Cdlbi(p);
        }
    }
}

/$ Ccontrols2.c
Chl2(pointer p) {
    int ic,s1[8],s2[8];
    s1[0]=12; s1[1]=p[1]+p[3]-10; s1[2]=p[2]+p[4]-10; s1[3]=10; s1[4]=10; s1[7]=0;
    s2[0]=12; s2[1]=p[1]+p[3]-10; s2[2]=p[2]; s2[3]=10; s2[4]=10; s2[7]=0;
    
    do {
        if (Cc(s1)) {
            Csi(p,s1,1);
            return 0;
        }
        else if (Cc(s2)) {
            Csi(p,s2,-1);
            return 0;
        } else {
            ic=((peny()-p[2])/11)+p[5];
            if ((ic!=p[6])&&(ic<p[8])&& Cc(p)) {
                if (!useColor && p[6]!=-1)
                    Cilbi(p);
                p[6]=ic;
                if (useColor) Cdlbi(p);
                else Cilbi(p);
            }
        }
    } while (pcevent(1)!=3);
    return (p[6]!=-1);
}

Chl(pointer p) {
    memcpy(&curFrame, &clrObjFrame, 5);
    Chl2(p);
}

Cdrp(pointer p) {
    int t,x,y,r;
    t=0;r=0;x=p[1];y=p[2];
    
    if (p[0]==8)
        p[2]=14;
    if (x+p[3]>158)
        p[1]=158-p[3];
    if (y+p[4]>158)
        p[2]=158-p[4];
    if (p[0]==8)
        rect(0,p[1]-2,p[2]+1,p[1]+p[3]+3,p[2]+p[4]+3,0);
    else
        rect(0,p[1]-2,p[2]-2,p[1]+p[3]+3,p[2]+p[4]+3,0);
    frame(1,p[1],p[2],p[1]+p[3],p[2]+p[4],1);
    line(1,p[1]+1,p[2]+p[4]+1,p[1]+p[3]-2,p[2]+p[4]+1);
    line(1,p[1]+p[3]+1,p[2]+1,p[1]+p[3]+1,p[2]+p[4]-2);
    p[5]=0;
    Cdlbi(p);
    if (p[0]==10) {
        t=1;
        p[0]=11;
    }
    while (1) {
        if (pcevent(1)==2)
            if (Cc(p)) {
                if (Chl2(p)) {
                    r=1;
                    break;
                }
            } else {
                r=0;
                break;
            }
    }
    if (t)
        p[0]=10;
    p[1]=x;p[2]=y;
    return r;
}

Cdrt(pointer p) {
    pushdraw();
    setbgi(clrFormFill);
    settextcolori(clrObjFG);
    rect(0,p[1]+11,p[2],p[1]+p[3],p[2]+11,0);
    textattr(0,1,0);
    textalign(0);
    text(p[1]+11,p[2],*(p[7]+p[6]));
    popdraw();
}

Chd(pointer p) {
    int r,i,t[8];
    r=0;
    saveg();
    for (i=0;i<8;i++)
        t[i]=p[i];
    t[4]=11;
    if (Cc(t))
        if (Chb(t))
            r=Cdrp(p);
    restoreg();
    if (r)
        Cdrt(p);
    return r;
}

Csettopic(pointer p, string s) {
    *p[10]=s;
}

Cgettopic(pointer p) {
    return *p[10];
}

Cdm(pointer p) {
    int i;
    pointer t;
    pushdraw();
    setbgi(clrMenuFill);
    setfgi(clrMenuFrame);
    settextcolori(clrMenuFG);
    rect(0,0,0,160,15,0);
    frame(1,1,1,158,13,1);
    line(1,2,14,156,14);
    line(1,159,2,159,11);
    for (i=0;i<p[3];i++) {
        t=*(p[2]+i);
        text(t[1]+3,1,*t[10]);
    }
    popdraw();
}

Cmevent(pointer p) {
    int i,e,c,r,t[8],m[8];
    pointer z;
    c=1;r=0;e=0; t[2]=0;t[4]=12;
    m[1]=0;m[2]=0;m[3]=160;m[4]=12;
    saveg();
    textattr(1,1,0);
    Cdm(p);
    while (c) {
        e=pcevent(1);
        if (e==2) {
            for (i=0;i<p[3];i++) {
                z=*(p[2]+i);z[6]=-1;
                t[1]=z[1];t[3]=z[11];
                if (Cc(t)) {
                    if (useColor) {
                        pushdraw();
                        setfgi(clrMenuFrame);
                        setbgi(clrMenuSelFill);
                        settextcolori(clrMenuSelFG);
                        rect(0,t[1],1,t[1]+t[3],13,0);
                        text(z[1]+3,1,*z[10]);
                        popdraw();
                        memcpy(&curFrame, &clrMenuFrame, 5);
                    } else {
                        rect(3,t[1],1,t[1]+t[3],13,0);
                    }
                    r=Cdrp(z); c=!r; i=p[3];
                    if (!r) {
                        if (!Cc(m))
                            c=0;
                        else {
                            restoreg();
                            saveg();
                            Cdm(p);
                            i=-1;
                        }
                    }
                    else {
                        *p[1]=*(z[7]+z[6]);
                        r=1;
                        c=0;
                    }
                } else if (!Cc(m))
                c=0;
            }
        } else if (e==11)
            c=0;
    }
    restoreg();
    textattr(0,1,0);
    return r;
}

int Cevent(pointer p,int e) {
    if (p<=0)
        return 0;
    if (e==2) {
        while (Cc(p)) {
            if (((p[0]>0)&& (p[0]<4))||(p[0]==15)) return Chb(p);
            else if ((p[0]==12)||(p[0]==9)||(p[0]==13)) return Chl(p);
            else if (p[0]==10) return Chd(p);
            else if (p[0]==5) return Chc(p);
            else if (p[0]==4) return Che(p);
            else if (p[0]==7) return Chr(p);
            else return 0;
        }
    } else if (e==11)
        if (p[0]==6)
            return Cmevent(p);
    return 0;
}

/$ Ccontrols3.c
Cdb(pointer p) {
    int c;
    int sel;
    if (p[0]>0)
        c=p[6];
    else
        c=2;
    pushdraw();
    settextcolori(clrObjFG);
    if (p[0]==3)
        if (p[8])
            sel = true;
    if (sel) {
        setbgi(clrObjSelFill);
        settextcolori(clrObjSelFG);
    } else {
        setfgi(clrObjFrame);
        setbgi(clrObjFill);
    }
    if (p[0]==2)
        setbgi(clrFormFill);
    rect(0,p[1],p[2],p[1]+p[3],p[2]+p[4],p[7]);
    frame(c,p[1],p[2],p[1]+p[3],p[2]+p[4],p[7]);
    if (p[0]==2)
        bitmap(p[1],p[2],*p[5]);
    else {
        textattr(0,1,0);
        textalign(11);
        text(p[1]+(p[3]/2),p[2]+(p[4]/2)-2,*p[5]);
        textalign(0);
    }
    popdraw();
    if (!useColor && sel) Cib(p);
}

Cdr(pointer p) {
    int i,x,w;
    w=p[3]/p[8];
    pushdraw();
    setbgi(clrObjFill);
    setfgi(clrObjFrame);
    settextcolori(clrObjFG);
    rect(0,p[1],p[2],p[1]+(p[8]*w),p[2]+p[4],0);
    textattr(0,1,0);
    textalign(11); 
    for (i=0;i<p[8];i++) {
        x=p[1]+(i*w);
        if (p[6]==i) {
            pushdraw();
            setbgi(clrObjSelFill);
            settextcolori(clrObjSelFG);
            rect(0,x,p[2],x+w-1,p[2]+p[4],0);
        }			
        frame(1,x,p[2],x+w-1,p[2]+p[4],0);
        text(x+(w/2),p[2]+(p[4]/2)-2,*(p[7]+i));
        if (p[6]==i)
            popdraw();
    }
    textalign(0);
    if (!useColor) Cir(p);
    popdraw();
}

Cde(pointer p) {
    pushdraw();
    setbgi(clrFormFill);
    setfgi(clrObjFrame);
    settextcolori(clrObjFG);
    rect(0,p[1],p[2],p[1]+p[3],p[2]+p[4],0);
    if (p[7]==2)
        frame(p[6],p[1],p[2],p[1]+p[3],p[2]+p[4],0);
    else if (p[7]==1)
        line(p[6],p[1],p[2]+p[4],p[1]+p[3],p[2]+p[4]);
    Cet(p);
    popdraw();
}

Cdl(pointer p) {
    pushdraw();
    setbgi(clrObjFill);
    setfgi(clrObjFrame);
    settextcolori(clrObjFG);
    frame(1,p[1],p[2],p[1]+p[3],p[2]+p[4],0);
    memcpy(&curFrame, &clrObjFrame, 5);
    Cdlbi(p);
    popdraw();
}

Cdt(pointer p) {
    int x,r;
    x=p[1];
    pushdraw();
    setfgi(clrObjFrame);
    frame(1,p[1],p[2],p[1]+p[3],p[2]+p[4],0);
    for (r=0;r<p[12]-1;r++) {
        x=x+*(p[10]+r);
        line(2,x-1,p[2],x-1,p[2]+p[4]-1);
    }
    popdraw();
    memcpy(&curFrame, &clrObjFrame, 5);
    Cdlbi(p);
}

Cdd(pointer p) {
    pushdraw();
    setbgi(clrFormFill);
    setfgi(clrObjFG);
    settextcolori(clrObjFG);
    bitmap(p[1],p[2],"0800000000ff7e3c18");
    Cdrt(p);
    popdraw();
}

Cdc(pointer p) {
    pushdraw();
    setbgi(clrFormFill);
    setfgi(clrObjFG);
    settextcolori(clrObjFG);
    Cck(p);
    rect(0,p[1]+12,p[2],p[1]+p[3],p[2]+p[4],0);
    textattr(0,1,0);
    textalign(0);
    text(p[1]+12,p[2],*p[5]);
    popdraw();
}

Cdf(pointer p) {
    pushdraw();
    setbgi(clrFormFill);
    setfgi(clrFormFrame);
    rect(0,p[1],p[2],p[1]+p[3],p[2]+p[4],0);
    frame2(1,p[1]+2,p[2]+2,p[1]+p[3]-2,p[2]+p[4]-2,3,2);
    rect(1,p[1]+2,p[2]+2,p[1]+p[3],p[2]+14,0);
    setbgi(clrFormFrame);
    settextcolori(clrFormFill);
    textattr(1,1,0);
    textalign(1);
    text(p[1]+(p[3]/2),p[2]+2,*p[5]); 
    textattr(0,1,0);
    textalign(0);
    popdraw();
}

/$ Ccontrols4.c
Cdraw(pointer p) {
    int c;
    c=p[0];
    if (c<0)
        c=-c;
    if (c>100)
        return;
    switch (c) {
        case 1:
        case 2:
        case 3: Cdb(p); break;
        case 9:
        case 13: Cdt(p); break;
        case 10: Cdd(p); break;
        case 5: Cdc(p); break;
        case 4:
        case 15: Cde(p); break;
        case 7: Cdr(p); break;
        case 12: Cdl(p); break;
        case 14: Cdf(p); break;
    }
}

Cerase(pointer p) {
    pushdraw();
    setbgi(clrFormFill);
    if (p[0]==10)
        rect(0,p[1]-1,p[2]-1,p[1]+12,p[2]+12,0);
    else
        rect(0,p[1]-1,p[2]-1,p[1]+p[3]+1,p[2]+p[4]+1,0);
    popdraw();
}

Chide(pointer p) {
    int c;
    c=p[0];
    if (c<0) c=-c;
    if (c>100) return;
    p[0]=p[0]*100;
    Cerase(p);
}

Cshow(pointer p) {
    int c;
    c=p[0];
    if (c<0) c=-c;
    if (c<100) return;
    p[0]=p[0]/100;
    Cdraw(p);
}

Cactivate(pointer p) {
    if (p[0]>0) return;
    p[0]=-(p[0]);
    if (p[0]==1) Cdraw(p);
}

Cdeactivate(pointer p) {
    if (p[0]<0) return;
    p[0]=-(p[0]);
    if (p[0]==-1) Cdraw(p);
}

Csetstate(pointer p, int s) {
    if (p[0]==3) {
        p[8]=s;
        return 1;
    }
    else if (p[0]==5) {
        p[6]=s;
        return 1;
    }
    else
        return 0;
}

Cgetstate(pointer p) {
    if (p[0]==3) return p[8];
    else if (p[0]==5) return p[6];
    else return 0;
}

Csetcursel(pointer p, int s) {
    if ((p[0]>6)&&(p[0]<14)) {
        p[6]=s;
        return 1;
    }
    else return 0;
}

Cgetcursel(pointer p) {
    if ((p[0]>6)&&(p[0]<14)) return p[6];
    else return 0;
}

Cdestroy(pointer p) {
    Cerase(p);
    if ((p[0]<=5)||(p[0]>=14))
        free(p[5]);
    else if (p[0]>=9)
        free(p[7]);
    if ((p[0]==8)||(p[0]==9))
        free(p[10]);
    if (p[0]==7)
        free(p[6]);
    if (p[0]==6) {
        free(p[1]);
        free(p[2]);
    }
    free(p);
}

int Cpopupevent(pointer p) {
    int r;
    saveg();
    p[6]=-1;
    memcpy(&curFrame, &clrObjFrame, 5);
    r=Cdrp(p);
    restoreg();
    return r;
}

Csetsize(pointer p,int n) {
    int m;
    pointer c;
    if (p[0]==9)
        m=p[12];
    else
        m=1;
    c=malloct("s",n*m);
    if (c==0)
        return 0;
    if (n<p[9])
        p[9]=n;
    memcpy(c,p[7],p[9]*m);
    p[9]=n;
    free(p[7]);
    p[7]=c;
    return 1;
}

Cadditem(pointer p,string s) {
    int m;
    if (p[0]==9)
        m=p[12];
    else
        m=1;
    p[8]=p[8]+1;
    if (p[9]<p[8])
        if (!Csetsize(p,p[8]))
            return 0;
    if (p[0]==8)
        p[4]=p[8]*11;
    *(p[7]+(p[8]*m)-m)=s;
    Csetcursel(p,p[8]-1);
    return 1;
}

Cremoveitem(pointer p) {
    int m,i;
    if (p[0]==9)
        m=p[12];
    else
        m=1;
    p[8]=p[8]-1;
    i=p[6]*m;
    memcpy(p[7]+i,p[7]+i+m,(p[8]*m)-i);
    Csetsize(p,p[8]);
    if (p[0]==8)
        p[4]=p[8]*11;
    Csetcursel(p,-1);
    return 1;
}

Cmenu(int x,int w,int wt) {
    pointer p,c;
    p=Cip(12,x,1,w,0);
    c=malloct("s",1);
    p[0]=8;p[4]=0;p[5]=0;p[6]=-1;p[7]=0;p[8]=0;p[9]=0;p[10]=c;p[11]=wt;*p[10]="";
    return p;
}

Cmenubar() {
    pointer p,c,m;
    p=malloct("i",4);
    c=malloct("s",1);
    m=malloct("i",1);
    p[0]=6;p[1]=c;p[2]=m;p[3]=0;
    hookmenu(1);
    return p;
}

Caddmenu(pointer p,pointer m) {
    pointer c;
    c=malloct("i",p[3]+1);
    if (c==0)
        return 0;
    memcpy(c,p[2],p[3]);
    free(p[2]);
    p[2]=c; p[3]=p[3]+1;
    *(p[2]+p[3]-1)=m;
    return 1;
}

Cinit() {
    clrObjFrame = getuicolor(0);
    clrObjFill = getuicolor(1);
    clrObjFG = getuicolor(2);
    clrObjSelFill = getuicolor(3);
    clrObjSelFG = getuicolor(4);
    
    clrFormFrame = getuicolor(21);
    clrFormFill = getuicolor(22);

    clrMenuFrame = getuicolor(5);
    clrMenuFill = getuicolor(6);
    clrMenuFG = getuicolor(7);
    clrMenuSelFill = getuicolor(8);
    clrMenuSelFG = getuicolor(9);
    
    if (getcolordepth() >= 8)
        useColor = true;
}

Cedit(int x,int y,int w,int l,int s,int a) {
    pointer p,c,t;
    p=Cip(11,x,y,w,11);
    p[5] = malloct("s", 1);
    p[10] = malloct("s", 1);
    p[0]=4; p[6]=l;p[7]=s;p[8]=a; *p[10]="";
    return p;
}

Clabel(int x,int y,int w,int l,int s,int a) {
    pointer p;
    p=Cedit(x,y,w,l,s,a);
    p[0]=15;
    return p;
}

Clistbox(int x,int y,int w,int h) {
    pointer p;
    p=Cip(10,x,y,w,h);
    p[0]=12;p[4]=h*11;p[5]=0;p[6]=-1; p[7]=0;p[8]=0;p[9]=0;
    return p;
}

Cdropdown(int x,int y,int w,int h) {
    pointer p;
    p=Clistbox(x,y,w,h);
    p[0]=10;p[6]=0;
    return p;
}

Cpopup(int x,int y,int w,int h) {
    pointer p;
    p=Clistbox(x,y,w,h);
    p[0]=11;
    return p;
}

Cbutton(int x,int y,int w,int h,int l,int b) {
    pointer p,c;
    p=Cip(8,x,y,w,h);
    c=malloct("s",1);
    p[0]=1;p[5]=c;p[6]=l;p[7]=b;
    if (h<12) p[4]=12;
    return p;
}

Cimage(int x,int y,int w,int h) {
    pointer p;
    p=Cbutton(x,y,w,h,0,0);
    p[0]=2;*p[5]="0";
    return p;
}

Cradio(int x,int y,int w,int h) {
    pointer p;
    p=Cip(10,x,y,w,h);
    if (h<12)
        p[4]=12;
    p[0]=7;p[5]=0;p[6]=0;p[7]=0;p[8]=0;p[9]=0;
    return p;
}

Cswitch(int x,int y,int w,int h,int l,int b) {
    pointer p,c;
    p=Cip(9,x,y,w,h);
    c=malloct("s",1);
    if (h<12)
        p[4]=12;
    p[0]=3;p[5]=c;p[6]=l; p[7]=b;p[8]=0;
    return p;
}

Ccheckbox(int x,int y,int w) {
    pointer p,c;
    p=Cip(7,x,y,w,12);
    c=malloct("s",1);
    p[0]=5;p[5]=c;p[6]=0;
    return p;
}

Csetrow(pointer p,int r,int w,int a) {
    if (r<=(p[12]-1)) {
        *(p[10]+r)=w;
        *(p[11]+r)=a;
    }
}

Ctable(int x,int y,int w,int h,int r) {
    int i;
    pointer p,c,a;
    p=Cip(13,x,y,w,h);
    c=malloct("i",r);
    a=malloct("i",r);
    p[0]=9;p[4]=h*11;p[5]=0;p[6]=-1;p[7]=0;p[8]=0;p[9]=0;p[10]=c;p[11]=a;p[12]=r;
    for (i=0;i<r;i++) {
        *(p[10]+i)=w/r;
        *(p[11]+i)=0;
    }
    return p;
}

CtableDB(int x,int y,int w,int h,int r,pointer g,string d) {
    int i;
    pointer p,c,f,a;
    p=Cip(14,x,y,w,h);
    c=malloct("i",r);
    f=malloct("s",1);
    a=malloct("i",r);
    p[0]=13;p[4]=h*11;p[5]=0;p[6]=-1;p[7]=g;p[8]=dbnrecs();
    p[9]=0;p[10]=c;p[11]=a; p[12]=r;p[13]=f;*p[13]=d;
    for (i=0;i<r;i++) {
        *(p[10]+i)=w/r;
        *(p[11]+i)=0;}
    return p;
}

Cframe(int x,int y,int w,int h) {
    pointer p,c;
    p=Cip(6,x,y,w,h);
    c=malloct("s",1);
    p[0]=14;p[5]=c;
    return p;
}

Csetfield(pointer p,int r,string s) {
    if (r<=(p[12]-1))
    *(p[7]+(p[12]*p[6])+r)=s;
}

Cgetfield(pointer p,int r) {
    if (r<=(p[12]-1))
    return *(p[7]+(p[12]*p[6])+r);
}

Csetcontent(pointer p,string s) {
    if (p[0]==9)
        *(p[7]+(p[6]*p[12]))=s;
    else if ((p[0]>6)&&(p[0]<14))
        *(p[7]+p[6])=s;
    else if (p[0]==6)
        *p[1]=s;
    else *p[5]=s;
}

Cgetcontent(pointer p) {
    if (p[0]==9)
        return *(p[7]+(p[6]*p[12]));
    else if ((p[0]>6)&&(p[0]<14))
        return *(p[7]+p[6]);
    else if (p[0]==6)
        return *p[1];
    else
        return *p[5];
}

Cgetcount(pointer p) {
    if ((p[0]>6)&&(p[0]<14))
        return p[8];
    else if (p[0]==6)
        return p[3];
    else
        return 0;
}

// controls
Chandle hl1,he1,hlb1,ht1,hm1,hm2,hmf,hb1,hb2,hi1,hd1,hp1,hs1,hc1,hr1;
pointer DB;

string rotator[4]={
"0c0f033c43e43e83f83ffc1fc17c27c23cc0f0",
"0c0f030c402606f0ffdffbff0f60640230c0f0",
"0c0f03cc7c27c2fc1fc183f83f43e43e33c0f0",
"0c0f03fc5fa4f28618418218614f25fa3fc0f0"
};
int iRot;
int isRot;

initcontrols(){
int i,r;
// button 1
hb1=Cbutton(1,147,35,0,1,4);
Csetcontent(hb1,"Info");
// button 2
hb2=Cbutton(40,147,35,0,1,4);
Csetcontent(hb2,"Quit");
// image-button 1
hi1=Cimage(140,18,12,12);
Csetcontent(hi1,"0c1f83fc7fee67e67ffffffdfbef770e3fc1f8");
// listbox 1
hl1=Clistbox(1,18,90,3);
for(i=1;i<=10;i++) Cadditem(hl1,"Line number  "+i);
Csetcursel(hl1,1);
// dropdown 1
hd1=Cdropdown(95,36,60,5);
for(i=1;i<=10;i++) Cadditem(hd1,"Dropline "+i);
// popup 1
hp1=Cdropdown(14,23,70,5);
for(i=1;i<=8;i++) Cadditem(hp1,"Popline "+i);
// switch 1
hs1=Cswitch(95,18,20,12,1,0);
Csetcontent(hs1,"Off");
// checkbox 1
hc1=Ccheckbox(95,113,40);
Csetcontent(hc1,"active");
Csetstate(hc1,1);
// editfield 1
he1=Cedit(1,114,65,2,2,2);
Csettopic(he1,"Enter text:");
Csetcontent(he1,"edit me");
// label 1
hlb1=Clabel(1,129,65,0,2,1);
Csetcontent(hlb1,"click here!");
// radio 1
hr1=Cradio(95,128,60,0);
for(i=1;i<=3;i++) Cadditem(hr1,"Do"+i);
// menu-topic 1
hm1=Cmenu(5,60,40);
Csettopic(hm1,"Applet");
for(i=1;i<=5;i++) Cadditem(hm1,"Item"+i);
// menu-topic 2
hm2=Cmenu(45,60,45);
Csettopic(hm2,"Options");
for(i=1;i<=7;i++) Cadditem(hm2,"Item "+i);
Csetcursel(hm2,1);
Csetcontent(hm2,"TestX");
// menu-bar
hmf=Cmenubar();
Caddmenu(hmf,hm1);
Caddmenu(hmf,hm2);
}

drawscreen(){
clearg();
title("CControl Test");
// draw controls
Cdraw(hb1); Cdraw(hb2);
Cdraw(hl1); Cdraw(hi1);
Cdraw(hd1); Cdraw(hs1);
Cdraw(hc1); Cdraw(he1);
Cdraw(hlb1); Cdraw(hr1);
Cdraw(ht1);
}

dialog(){
Chandle hf1,he1,hb1; int e;
// dialog frame
hf1=Cframe(10,40,140,70);
Csetcontent(hf1,"Some Dialog");
// editfield 1
he1=Cedit(20,60,70,2,1,0);
Csetcontent(he1,"dialog field");
// button 1
hb1=Cbutton(65,90,30,12,1,4);
Csetcontent(hb1,"Ok");
// draw dialog
Cdraw(hf1); Cdraw(he1); Cdraw(hb1);
// message loop
while(1){
    e=pcevent(1);
    if(Cevent(he1,e));
    else if(Cevent(hb1,e))
        break;
}
}

createDB(){
int i,r; pointer p;
p=malloct("s",3);
if(!dbcreate("CTestDB")){alert("\nUnable to create CTestDB.");return;}
for(i=0;i<10;i++){
    for(r=0;r<3;r++) p[r]="DB "+(i+1)+"/"+(r+1);
    dbrec(-1); dbwritex(p,"szszsz");
}
}

initDB(){
DB=malloct("s",3);
// create database
if(!dbopen("CTestDB")) createDB();
// create database-table
ht1=CtableDB(1,55,158,5,3,DB,"szszsz");
Csetrow(ht1,0,45,0);
Csetrow(ht1,1,55,2);
Csetrow(ht1,2,48,1);
}

// actions on controlevents:
onbutton1(){
alert("Listbox:"+Cgetcontent(hl1)+"\nSwitch:"+Cgetstate(hs1)+"\nRadio:"+Cgetcursel(hr1));
}
onlabel1(){
dialog(); drawscreen();
}
onimage1(){
if(Cpopupevent(hp1)) alert("Popup:\n"+Cgetcontent(hp1));
}
onswitch1(){
if(Cgetstate(hs1)){
    isRot=1;iRot=0;
    Csetcontent(hi1,*rotator);
    Csetcontent(hs1,"On");
}else{
    isRot=0;
    Csetcontent(hi1,"0c1f83fc7fee67e67ffffffdfbef770e3fc1f8");
    Csetcontent(hs1,"Off");
}
Cdraw(hi1);
Cdraw(hs1);
}
oncheckbox1(){
if(Cgetstate(hc1)) Cactivate(hb2);
else Cdeactivate(hb2);
}
onmenu(string s){
alert(s);
}

main(){
int e,t;
// initialize screen
graph_on();
title("Please wait....");
Cinit();
initDB();
initcontrols();
drawscreen();

// message loop
while(1){
e=pcevent(10);
if(isRot){
    Csetcontent(hi1,rotator[iRot]);
    Cdraw(hi1);
    iRot=(iRot+1)%4;
}
if(e == 23) drawscreen();
else if(Cevent(hb1,e)) onbutton1();
else if(Cevent(hb2,e)) break;
else if(Cevent(hl1,e));
else if(Cevent(hd1,e));
else if(Cevent(hi1,e)) onimage1();
else if(Cevent(hs1,e)) onswitch1();
else if(Cevent(hc1,e)) oncheckbox1();
else if(Cevent(he1,e));
else if(Cevent(hlb1,e)) onlabel1();
else if(Cevent(hmf,e)) onmenu(Cgetcontent(hmf));
else if(Cevent(hr1,e));
else if(Cevent(ht1,e));
}
dbclose();
exit();
}
